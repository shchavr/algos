def radix_sort(arr):
    """Поразрядная сортировка."""
    
    comparisons = 0  
    
    RADIX = 10  # Основание системы счисления (десятичная)
    maxLength = False  # Флаг для определения, закончили ли мы проходы по разрядам
    tmp, placement = -1, 1  # Временная переменная и текущий разряд
    passes = 0  

    # пока не обработаем все разряды
    while not maxLength:
        maxLength = True  
        # Список для хранения буферов по разрядам
        buckets = [list() for _ in range(RADIX)]

        # Размещение элементов в соответствующие корзины (бронирование по разрядам)
        for i in arr:
            
            tmp = i // placement  # Получаем значение в текущем разряде
            bucket_index = tmp % RADIX  # Вычисляем индекс корзины по текущему разряду
            buckets[bucket_index].append(i)  # Добавляем элемент в соответствующую корзину
            
            if maxLength and tmp > 0:  # Если у нас еще есть элементы выше текущего разряда
                maxLength = False  # Мы не закончили проходы

        # Объединение элементов из корзин обратно в исходный массив
        a = 0  # Указатель на текущую позицию в массиве
        
        for b in range(RADIX): 
            for i in buckets[b]:  
                arr[a] = i  # Копируем элементы обратно в исходный массив
                a += 1  # Переходим к следующему индексу в массиве

        placement *= RADIX  # Переход к следующему разряду
        passes += 1 

    return arr, passes
